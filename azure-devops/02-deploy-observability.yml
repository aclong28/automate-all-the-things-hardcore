name: deploy-observability

trigger: none

variables:
  - group: aws-keys
  - name: AWS_REGION
    value: eu-central-1 # This value was modified by the initial-setup python script
  - name: APP_NAME
    value: ngao-nghe # This value was modified by the initial-setup python script
    

pool:
#  vmImage: 'ubuntu-latest' 
  # If you are using a self-hosted agent, comment out the previous line and uncomment the following three
  name: default # Insert here the name of the agent pool you created
  demands:
    - agent.name -equals worker-0 # Insert here the name of the agent you created


stages:
- stage: DeployPrometheus
  displayName: 'Deploy Prometheus'
  jobs:
  - job: DeployPrometheusJob
    displayName: 'Deploy Prometheus Job'
    steps:
    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true

    # We update the local repo with a pull just in case there have been any recent modifications
    - script: |
        git pull origin main
      displayName: Update repo
    
    - script: |
        sed -i 's/^#//' argo-cd/applications/infra/prometheus-application.yaml
      displayName: 'Uncomment the contents of prometheus-application.yaml'
    
    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add argo-cd/applications/infra/prometheus-application.yaml
        git commit -m "Uncommented content of argo-cd/applications/infra/prometheus-application.yaml by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'




- stage: DeployLoki
  displayName: 'Deploy Loki'
  jobs:
  - job: DeployLokiJob
    displayName: 'Deploy Loki Job'
    steps:
    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true

    # Every time the pipeline performs a "checkout" step it will checkout the same commit, so we need this step to pull for the changes commited in the previous stage   
    - script: |
        git pull origin main
      displayName: Update repo
    
    - script: |
        sed -i 's/^#//' argo-cd/applications/infra/loki-stack-application.yaml
      displayName: 'Uncomment the contents of loki-stack-application.yaml'
    
    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add argo-cd/applications/infra/loki-stack-application.yaml
        git commit -m "Uncommented content of argo-cd/applications/infra/loki-stack-application.yaml by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'




- stage: DeployGrafana
  displayName: 'Deploy Grafana'
  jobs:
  - job: DeployGrafanaJob
    displayName: 'Deploy Grafana Job'
    steps:
    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true

    # Every time the pipeline performs a "checkout" step it will checkout the same commit, so we need this step to pull for the changes commited in the previous stage   
    - script: |
        git pull origin main
      displayName: Update repo
    
    - script: |
        sed -i 's/^#//' argo-cd/applications/infra/grafana-application.yaml
      displayName: 'Uncomment the contents of grafana-application.yaml'
    
    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add argo-cd/applications/infra/grafana-application.yaml
        git commit -m "Uncommented content of argo-cd/applications/infra/grafana-application.yaml by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'
